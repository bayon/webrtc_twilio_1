{"version":3,"sources":["components/Signin.js","components/TwilioVideos.js","App.js","index.js"],"names":["Signin","setToken","setName","setRoom","name","room","event","a","preventDefault","axios","post","identity","result","data","console","log","onSubmit","htmlFor","type","id","value","onChange","e","target","typ","TwilioVideos","token","localVideoRef","useRef","remoteVideoRef","appendNewParticipant","track","chat","document","createElement","setAttribute","appendChild","attach","current","useEffect","TwilioVideo","connect","video","audio","then","addParticipant","participant","tracks","forEach","publication","isSubscribed","on","createLocalVideoTrack","participants","elem","getElementById","parentNode","removeChild","catch","ref","App","useState","className","ReactDOM","render","StrictMode"],"mappings":"+PA8BeA,MA1Bf,YAA6D,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAAQ,4CACxD,WAA4BC,GAA5B,eAAAC,EAAA,6DACID,EAAME,iBADV,SAGyBC,IAAMC,KAAK,kDAAmD,CAC/EC,SAAUP,EACVC,KAAMA,IALd,OAGUO,EAHV,OAOIX,EAASW,EAAOC,MAChBC,QAAQC,IAAI,gCAAgCH,EAAOC,MARvD,4CADwD,sBAWxD,OACI,uBAAMG,SAZ8C,4CAYpD,UACI,wBAAOC,QAAQ,OAAf,iBAEI,uBAAOC,KAAK,OAAOC,GAAI,OAAOC,MAAOhB,EAAMiB,SAAU,SAAAC,GAAC,OAAIpB,EAAQoB,EAAEC,OAAOH,aAE/E,wBAAOH,QAAQ,OAAf,iBAEI,uBAAOC,KAAK,OAAOC,GAAI,OAAOC,MAAOf,EAAMgB,SAAU,SAAAC,GAAC,OAAInB,EAAQmB,EAAEC,OAAOH,aAE/E,wBAAQI,IAAI,SAAZ,sB,iBCwCGC,MA7Df,YAAwC,IAAhBC,EAAe,EAAfA,MAAOrB,EAAQ,EAARA,KACvBsB,EAAgBC,mBAChBC,EAAiBD,mBAEvB,SAASE,EAAqBC,EAAOpB,GACnC,IAAMqB,EAAOC,SAASC,cAAc,OACpCF,EAAKG,aAAa,KAAMxB,GACxBqB,EAAKI,YAAYL,EAAMM,UACvBR,EAAeS,QAAQF,YAAYJ,GA4CrC,OA1CAO,qBAAU,WAwCR,OAvCAzB,QAAQC,IAAI,yCAA0CW,GACtDc,IAAYC,QAAQf,EAAO,CACzBgB,OAAO,EACPC,OAAO,EACPvC,KAAMC,IAELuC,MAAK,SAACvC,GAaL,SAASwC,EAAeC,GACtBhC,QAAQC,IAAI,4BACZ+B,EAAYC,OAAOC,SAAQ,SAACC,GACtBA,EAAYC,eAEdpB,EADcmB,EAAYlB,MACEe,EAAYnC,UACxCG,QAAQC,IAAI,wBAGhB+B,EAAYK,GAAG,mBAAmB,SAACpB,GACjCD,EAAqBC,EAAOe,EAAYnC,aAtB5CG,QAAQC,IAAI,uBACZyB,IAAYY,wBAAwBR,MAAK,SAACb,GACxCJ,EAAcW,QAAQF,YAAYL,EAAMM,aAuB1ChC,EAAKgD,aAAaL,QAAQH,GAC1BxC,EAAK8C,GAAG,uBAAwBN,GAChCxC,EAAK8C,GAAG,2BAvBR,SAA2BL,GACzBhC,QAAQC,IACN,qCACA+B,EAAYnC,UAEd,IAAM2C,EAAOrB,SAASsB,eAAeT,EAAYnC,UACjD2C,EAAKE,WAAWC,YAAYH,SAmB/BI,OAAM,SAACpC,GACNR,QAAQC,IAAI,oBAAqBO,MAE9B,eACN,CAACI,EAAOrB,IAET,gCACE,oDAAuBA,KACvB,qBAAKsD,IAAKhC,IACV,qBAAKgC,IAAK9B,QCnCD+B,MApBf,WAAgB,IAAD,EAEeC,qBAFf,mBAEJnC,EAFI,KAEGzB,EAFH,OAGY4D,mBAAS,IAHrB,mBAGJzD,EAHI,KAGCF,EAHD,OAIa2D,mBAAS,QAJtB,mBAIJxD,EAJI,KAIEF,EAJF,KAMb,OACE,qBAAK2D,UAAU,MAAf,SACIpC,EAOF,cAAC,EAAD,CAAcA,MAAOA,EAAQrB,KAAMA,IAPzB,cAAC,EAAD,CACVJ,SAAUA,EACVC,QAASA,EACTE,KAAMA,EACND,QAASA,EACTE,KAAMA,O,OCZZ0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASsB,eAAe,U","file":"static/js/main.15f52631.chunk.js","sourcesContent":["import axios from 'axios';\nimport React from 'react';\n\n\nfunction Signin({ setToken, setName, setRoom, name, room }) {\n    async function handleSubmit(event) {\n        event.preventDefault(); \n        // get the video-token url \n        const result = await axios.post('https://video-call-6915-dev.twil.io/video-token', {\n            identity: name, \n            room: room \n        });\n        setToken(result.data)\n        console.log('got the token with the value ',result.data)\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"name\">\n                Name\n                <input type=\"text\" id =\"name\" value={name} onChange={e => setName(e.target.value)} />\n            </label>\n            <label htmlFor=\"room\">\n                Room\n                <input type=\"text\" id =\"room\" value={room} onChange={e => setRoom(e.target.value)} />\n            </label>\n            <button typ=\"submit\" >Join</button>\n        </form>\n    )\n}\n\nexport default Signin ","\n\nimport React, { useEffect, useRef } from 'react';\nimport TwilioVideo from 'twilio-video';\nfunction TwilioVideos({ token, room }) {\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n\n  function appendNewParticipant(track, identity) {\n    const chat = document.createElement('div');\n    chat.setAttribute('id', identity);\n    chat.appendChild(track.attach());\n    remoteVideoRef.current.appendChild(chat);\n  }\n  useEffect(() => {\n    console.log('Trying to connect to Twilio with token', token);\n    TwilioVideo.connect(token, {\n      video: true,\n      audio: true,\n      name: room,\n    })\n      .then((room) => {\n        console.log('connected to Twilio');\n        TwilioVideo.createLocalVideoTrack().then((track) => {\n          localVideoRef.current.appendChild(track.attach());\n        });\n        function removeParticipant(participant) {\n          console.log(\n            'Removing participant with identity',\n            participant.identity\n          );\n          const elem = document.getElementById(participant.identity);\n          elem.parentNode.removeChild(elem);\n        }\n        function addParticipant(participant) {\n          console.log('Adding a new Participant');\n          participant.tracks.forEach((publication) => {\n            if (publication.isSubscribed) {\n              const track = publication.track;\n              appendNewParticipant(track, participant.identity);\n              console.log('Attached a track');\n            }\n          });\n          participant.on('trackSubscribed', (track) => {\n            appendNewParticipant(track, participant.identity);\n          });\n        }\n        room.participants.forEach(addParticipant);\n        room.on('participantConnected', addParticipant);\n        room.on('participantDisconnected', removeParticipant);\n      })\n      .catch((e) => {\n        console.log('An error happened', e);\n      });\n    return () => {};\n  }, [token, room]);\n  return (\n    <div>\n      <h1>Your are in room: {room}</h1>\n      <div ref={localVideoRef}></div>\n      <div ref={remoteVideoRef}></div>\n    </div>\n  );\n}\n\nexport default TwilioVideos;\n\n\n// import React, { useEffect, useRef } from 'react';\n// import TwilioVideo from 'twilio-video';\n\n\n// function TwilioVideos({token, room}) {\n\n// const localVideoRef = useRef() \n// const remoteVideoRef = useRef() ;\n\n// useEffect( () => {\n//     TwilioVideo.connect( token, {\n//         video: true, \n//         audio: true,\n//         name: room\n//     })\n//         .then((room) => {\n//             console.log(\"connected to twilio room:\",room);\n//             TwilioVideo.createLocalVideoTrack().then(\n//                 track => {\n//                     localVideoRef.current.appendChild(track.attach());\n            \n//             });\n\n//         function addParticipant(participant) {\n//             console.log('adding new participant.')\n//             participant.tracks.forEach( publication => {\n//                 console.log('each tracks...')\n                \n//                 if(publication.subscribed){\n//                     console.log('subscribed !')\n//                     const track = publication.track;\n//                     remoteVideoRef.current.appendChild(track.attach());\n//                     console.log('attached a track...')\n//                 }\n//             });\n            \n//         }\n//         //make sure that all new participants are seen by existing participants. \n//         room.participants.forEach(addParticipant)\n//         console.log('add participant for each participants...')\n//         room.on('participantConnected', addParticipant)\n        \n\n//     })\n//     .catch( (e) => console.log(\"error:\",e)) \n//     return () => {\n\n//     };\n// },[token, room])\n\n//     return (\n//         <div>\n//             <h1>You are in room:{room}</h1>\n//             <div ref={localVideoRef} />\n//             <div ref={remoteVideoRef} />\n\n//         </div>\n//     )\n// }\n\n// export default TwilioVideos;","import { useState } from 'react';\nimport './App.css';\nimport Signin from './components/Signin';\nimport TwilioVideos from './components/TwilioVideos';\n\nfunction App() {\n\n    const [token, setToken] = useState(); \n    const [name,setName] = useState(''); \n    const [room, setRoom] = useState(\"room\")\n\n  return (\n    <div className=\"App\">\n      {!token ? <Signin \n      setToken={setToken} \n      setName={setName} \n      name={name} \n      setRoom={setRoom}  \n      room={room}\n      />: \n      <TwilioVideos token={token}  room={room}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n////reportWebVitals();\n"],"sourceRoot":""}